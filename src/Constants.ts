/*
Copyright (c) 2024 Martin Bechard <martin.bechard@DevConsult.ca>
This software is licensed under the MIT License.
File: src/Constants.ts
This was generated by Claude Sonnet 3.5, with the assistance of my human mentor

System-wide constants for the Dev Prompter server
Constants: Because magic numbers are so last century!
*/

/**
 * Template system configuration constants interface
 */
export interface TemplateConstants {
    /** Directory containing template files */
    readonly TEMPLATE_DIR: string;

    /** Required file extension for templates */
    readonly FILE_EXTENSION: string;

    /** Maximum template file size in bytes */
    readonly MAX_FILE_SIZE: number;

    /** Required template sections */
    readonly REQUIRED_SECTIONS: readonly string[];

    /** Handlebars options */
    readonly HANDLEBARS_OPTIONS: Readonly<{
        strict: boolean;
        noEscape: boolean;
    }>;

    /** Template cache settings */
    readonly CACHE_OPTIONS: Readonly<{
        enabled: boolean;
        maxAge: number;
    }>;
}

/**
 * System-wide configuration constants interface
 */
export interface SystemConstants {
    /** Server identification */
    readonly SERVER: Readonly<{
        name: string;
        version: string;
    }>;

    /** Logging configuration */
    readonly LOGGING: Readonly<{
        enabled: boolean;
        level: string;
        maxEntries: number;
    }>;

    /** Operation timeouts */
    readonly TIMEOUTS: Readonly<{
        templateLoad: number;
        promptGeneration: number;
    }>;

    /** Error handling */
    readonly ERROR: Readonly<{
        maxRetries: number;
        retryDelay: number;
    }>;
}

/**
 * Template-related constants
 */
export const TEMPLATE_CONSTANTS: TemplateConstants = Object.freeze({
    TEMPLATE_DIR: process.env.TEMPLATE_DIR ?? "./templates",
    FILE_EXTENSION: ".md",
    MAX_FILE_SIZE: 1024 * 1024, // 1MB
    REQUIRED_SECTIONS: Object.freeze(["title", "description", "template"]),
    HANDLEBARS_OPTIONS: Object.freeze({
        strict: true,
        noEscape: true
    }),
    CACHE_OPTIONS: Object.freeze({
        enabled: true,
        maxAge: 5 * 60 * 1000 // 5 minutes
    })
});

/**
 * System-related constants
 */
export const SYSTEM_CONSTANTS: SystemConstants = Object.freeze({
    SERVER: Object.freeze({
        name: "dev-prompter-mcp-server",
        version: process.env.npm_package_version ?? "1.0.0"
    }),
    LOGGING: Object.freeze({
        enabled: process.env.LOGGING_ENABLED !== "false",
        level: process.env.LOG_LEVEL ?? "info",
        maxEntries: parseInt(process.env.MAX_LOG_ENTRIES ?? "1000", 10)
    }),
    TIMEOUTS: Object.freeze({
        templateLoad: 5000,    // 5 seconds
        promptGeneration: 10000 // 10 seconds
    }),
    ERROR: Object.freeze({
        maxRetries: 3,
        retryDelay: 1000 // 1 second
    })
});